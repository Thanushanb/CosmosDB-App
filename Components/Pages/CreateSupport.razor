@page "/create-support"
@rendermode InteractiveServer
@using SupportApp.Models
@inject SupportApp.Services.CosmosService Cosmos
@inject NavigationManager Nav

<h1>Opret supporthenvendelse</h1>

@if (_success != null)
{
    <div class="alert alert-success">@_success</div>
}

<EditForm Model="_model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Navn</label>
        <InputText class="form-control" @bind-Value="_model.CustomerName" />
    </div>

    <div class="mb-3">
        <label>Email</label>
        <InputText class="form-control" @bind-Value="_model.Email" />
    </div>

    <div class="mb-3">
        <label>Emne</label>
        <InputText class="form-control" @bind-Value="_model.Category" />
    </div>

    <div class="mb-3">
        <label>Besked</label>
        <InputTextArea class="form-control" rows="5" @bind-Value="_model.Message" />
    </div>
    

    <button class="btn btn-primary" type="submit">Opret henvendelse</button>
</EditForm>

@code {
    private SupportMessage _model = new();
    private string? _success;

    private async Task HandleValidSubmit()
    {
        await Cosmos.CreateAsync(_model);
        _success = "Henvendelsen er oprettet.";
        _model = new();
    }
}